//Value: ff00000000000000000000000000000000000000000000000000000000000000
//Number of bytes: 32
//Little-endian: 255
//Big-endian: 115339776388732929035197660848497720713218148788040405586178452820382218977280

//Value: aaaa000000000000000000000000000000000000000000000000000000000000
//Number of bytes: 32
//Little-endian:	43690
//Big-endian:	77193548260167611359494267807458109956502771454495792280332974934474558013440

//Value: FFFFFFFF
//Number of bytes: 4
//Little-endian:	4294967295
//Big-endian:	4294967295

//Value
//Number of bytes: 512
//Little-endian:	240
//Big-endian:	

/*  hex_b(k) 16 --> Big-endian
    hex_l(k) 16 --> Little-endian
    bigint_hex  Big-endian, Little-endian --> 16 
*/
console.log(bigint_hex(245n));
console.log(hex_b("FC09AB"));
console.log(hex_l("FC00000005555509AB"));

console.log("vector 1");
console.log(
  "Value: ff00000000000000000000000000000000000000000000000000000000000000"
);
let v1 = "ff00000000000000000000000000000000000000000000000000000000000000";
console.log("Little-end:", hex_l(v1));
console.log("Big-end", hex_b(v1));
console.log(bigint_hex(255n));
console.log(
  bigint_hex(
    115339776388732929035197660848497720713218148788040405586178452820382218977280n
  )
);

console.log("vector 2");
console.log(
  "Value: aaaa000000000000000000000000000000000000000000000000000000000000"
);
let v2 = "aaaa000000000000000000000000000000000000000000000000000000000000";
console.log("Little-end:", hex_l(v2));
console.log("Big-end", hex_b(v2));
console.log(bigint_hex(43690n));
console.log(
  bigint_hex(
    77193548260167611359494267807458109956502771454495792280332974934474558013440n
  )
);

console.log("vector 3");
console.log("Value: FFFFFFFF");
let v3 = "FFFFFFFF";
console.log("Little-end:", hex_l(v3));
console.log("Big-end", hex_b(v3));
console.log(bigint_hex(4294967295n));
console.log(bigint_hex(4294967295n));

console.log("vector 4");
console.log(
  "Value
);
let v4 =

console.log("Little-end:", hex_l(v4));
console.log("Big-end", hex_b(v4));
console.log(bigint_hex(240n));
console.log(
  bigint_hex(
n
  )
);

function numOfHexStr(k) {
  let str = "0123456789ABCDEF";
  return str[k];
}

function Hexofnum(k) {
  if (k === "A" || k === "a") return 10;
  if (k === "B" || k === "b") return 11;
  if (k === "C" || k === "c") return 12;
  if (k === "D" || k === "d") return 13;
  if (k === "E" || k === "e") return 14;
  if (k === "F" || k === "f") return 15;
  return k;
}

/*//перевірка коректної роботи функцій numOfHexStr(k) та exofnum(k)
for (i = 0; i < 16; i++) {
  console.log(Hexofnum(numOfHexStr(i)));
}
*/

function hex_l(k) {
  let rez = 0n;
  for (i = 0; i < k.length; i++) {
    rez = rez + BigInt(Hexofnum(k[i])) * 16n ** BigInt(i);
  }
  return rez;
}

function hex_b(k) {
  let k1 = Array.from(k); //формуємо масив символів
  k1 = k1.reverse(); // розвертаємо масив
  k = k1.join(""); //склеюємо масив
  return hex_l(k);
}

function bigint_hex(k) {
  let p = 1;
  let rez = 16n;
  //визначаємо розміpність масиву в 16 системі, p - кількість елементів
  while (k >= rez) {
    rez = rez * 16n;
    p++;
  }
  //console.log("p = ", p);
  let rez_n = [];
  let rez16 = [];

  for (i = 0; i < p; i++) {
    rez16[i] = numOfHexStr(Number(k % 16n));
    //console.log(i, " ", rez16[i]);
    k = (k - (k % 16n)) / 16n;
    rez_n = rez_n + rez16[i];
  }

  //розвертаємо масив
  let k1 = Array.from(rez_n); //формуємо масив символів
  k1 = k1.reverse(); // розвертаємо масив
  rez_n = k1.join(""); //склеюємо масив

  //console.log(rez_n);
  return rez_n;
}
